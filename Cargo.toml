[package]
name = "csv"
version = "1.3.0"  #:version
authors = ["Andrew Gallant <jamslam@gmail.com>"]
description = "Fast CSV parsing with support for serde."
documentation = "https://docs.rs/csv"
homepage = "https://github.com/BurntSushi/rust-csv"
repository = "https://github.com/BurntSushi/rust-csv"
readme = "README.md"
keywords = ["csv", "comma", "parser", "delimited", "serde"]
license = "Unlicense/MIT"
categories = ["encoding", "parser-implementations"]
exclude = ["/.github", "/ci/*", "/scripts/*"]
edition = "2021"
rust-version = "1.81"

[workspace]
members = ["csv-core", "csv-index"]

[lib]
bench = false

[dependencies]
csv-core = { path = "csv-core", version = "0.1.11" }
itoa = "1"
ryu = "1"
serde = "1"

[target.'cfg(not(target_arch = "aarch64"))'.dependencies]
simdutf8 = "0.1"
# use SIMD on aarch64 (Apple Silicon, Raspberry Pi 4, etc.)
[target.'cfg(target_arch = "aarch64")'.dependencies]
simdutf8 = { version = "0.1", features = ["aarch64_neon"] }

[dev-dependencies]
bstr = { version = "1.10", default-features = false, features = ["alloc", "serde"] }
serde = { version = "1", features = ["derive"] }

[profile.release]
debug = false

[profile.bench]
debug = true

[features]
# when enabled, the compat flavor of simdutf8 will be used, which is a little slower
# but is a drop-in replacement for std::str::from_utf8, returning the position
# of the erroring field and the underlying error. (up to 16x faster than std::str::fromutf8)
# Otherwise, the basic flavor of simdutf8 will be used, which is faster but
# does not provide the position information. (up to 23x faster than std::str::fromutf8)
compat_simd = []
